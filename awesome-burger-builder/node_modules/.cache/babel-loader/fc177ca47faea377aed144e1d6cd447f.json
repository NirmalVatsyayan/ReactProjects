{"ast":null,"code":"import _objectSpread from \"/Users/nirmalvatsyayan/Desktop/NirmalVatsyayan/javascriptcode/awesome-burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/nirmalvatsyayan/Desktop/NirmalVatsyayan/javascriptcode/awesome-burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updatePurchaseState = () => {\n      const ingredients = _objectSpread({}, this.state.ingredients);\n\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchasable: this.state.purchasable,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/nirmalvatsyayan/Desktop/NirmalVatsyayan/javascriptcode/awesome-burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","constructor","props","updatePurchaseState","ingredients","state","sum","Object","keys","map","igKey","reduce","el","setState","purchasable","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","totalPrice","newPrice","removeIngredientHandler","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\n\nconst INGREDIENT_PRICES = {\n  salad : 0.5,\n  cheese : 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(props){\n      super(props);\n      this.state = {\n        ingredients : {\n          salad:0,\n          bacon:0,\n          cheese:0,\n          meat:0\n        },\n        totalPrice: 4,\n        purchasable:false\n      }\n  }\n\n  updatePurchaseState = () => {\n    const ingredients = {\n      ...this.state.ingredients\n    };\n\n    const sum = Object.keys(ingredients)\n    .map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    },0);\n\n    this.setState({purchasable: sum > 0});\n  }\n\n  addIngredientHandler = (type) => {\n\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n\n    this.setState({totalPrice:newPrice, ingredients:updatedIngredients});\n    this.updatePurchaseState(updatedIngredients);\n  }\n\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceAddition;\n    this.setState({totalPrice:newPrice, ingredients:updatedIngredients});\n    this.updatePurchaseState(updatedIngredients);\n  }\n\n  render(){\n      const disabledInfo = {\n        ...this.state.ingredients\n      };\n      for (let key in disabledInfo){\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n      return (\n\n        <Aux>\n            <Burger ingredients={this.state.ingredients}/>\n            <BuildControls ingredientAdded={this.addIngredientHandler}\n            ingredientRemved={this.removeIngredientHandler}\n            disabled={disabledInfo}\n            purchasable={this.state.purchasable}\n            price={this.state.totalPrice}/>\n        </Aux>\n      );\n  }\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}