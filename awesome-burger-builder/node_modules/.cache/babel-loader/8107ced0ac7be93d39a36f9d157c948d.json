{"ast":null,"code":"import _objectSpread from \"/Users/nirmalvatsyayan/Desktop/NirmalVatsyayan/javascriptcode/awesome-burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/nirmalvatsyayan/Desktop/NirmalVatsyayan/javascriptcode/awesome-burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from \"../../axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert(\"You Continue!\");\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Nirmal Vatsyayan',\n          address: {\n            street: 'test street',\n            zipCode: '41351',\n            country: 'India'\n          },\n          email: 'test@test.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post(\"/orders.json\", order).then(response => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      price: this.state.totalPrice.toFixed(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    });\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modelClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, orderSummary), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/nirmalvatsyayan/Desktop/NirmalVatsyayan/javascriptcode/awesome-burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","constructor","props","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","setState","purchasable","purchaseHandler","purchasing","addIngredientHandler","type","oldCount","state","updatedCount","updatedIngredients","priceAddition","oldPrice","totalPrice","newPrice","removeIngredientHandler","purchaseCancelHandler","purchaseContinueHandler","loading","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","error","render","disabledInfo","key","orderSummary","toFixed"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from \"../../axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nconst INGREDIENT_PRICES = {\n  salad : 0.5,\n  cheese : 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(props){\n      super(props);\n      this.state = {\n        ingredients : {\n          salad:0,\n          bacon:0,\n          cheese:0,\n          meat:0\n        },\n        totalPrice: 4,\n        purchasable:false,\n        purchasing:false,\n        loading:false\n      }\n  }\n\n  updatePurchaseState = (ingredients) => {\n\n    const sum = Object.keys(ingredients)\n    .map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    },0);\n\n    this.setState({purchasable: sum > 0});\n  }\n\n  purchaseHandler = () => {\n    this.setState({purchasing: true});\n  }\n\n  addIngredientHandler = (type) => {\n\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n\n    this.setState({totalPrice:newPrice, ingredients:updatedIngredients});\n    this.updatePurchaseState(updatedIngredients);\n  }\n\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceAddition;\n    this.setState({totalPrice:newPrice, ingredients:updatedIngredients});\n    this.updatePurchaseState(updatedIngredients);\n  }\n\n  purchaseCancelHandler = () => {\n    this.setState({purchasing: false});\n  }\n\n  purchaseContinueHandler = () => {\n    //alert(\"You Continue!\");\n    this.setState({loading: true});\n    const order = {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      customer: {\n        name: 'Nirmal Vatsyayan',\n        address: {\n          street: 'test street',\n          zipCode: '41351',\n          country: 'India'\n        },\n        email: 'test@test.com'\n      },\n      deliveryMethod: 'fastest'\n    }\n    axios.post(\"/orders.json\", order)\n    .then(response => {\n      this.setState({loading:false, purchasing: false});\n    })\n    .catch(error => {\n      this.setState({loading:false, purchasing: false});\n    });\n\n  }\n\n  render(){\n      const disabledInfo = {\n        ...this.state.ingredients\n      };\n      for (let key in disabledInfo){\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n      let orderSummary = <OrderSummary ingredients={this.state.ingredients}\n      purchaseCancelled={this.purchaseCancelHandler}\n      purchaseContinued={this.purchaseContinueHandler}\n      price={this.state.totalPrice.toFixed(2)}/>;\n\n      if(this.state.loading) {\n          orderSummary = <Spinner />\n      }\n      return (\n\n        <Aux>\n\n            <Modal show={this.state.purchasing} modelClosed={this.purchaseCancelHandler}>\n                   {orderSummary}\n            </Modal>\n            <Burger ingredients={this.state.ingredients}/>\n            <BuildControls ingredientAdded={this.addIngredientHandler}\n            ingredientRemoved={this.removeIngredientHandler}\n            disabled={disabledInfo}\n            purchasable={this.state.purchasable}\n            ordered={this.purchaseHandler}\n            price={this.state.totalPrice}/>\n        </Aux>\n      );\n  }\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}